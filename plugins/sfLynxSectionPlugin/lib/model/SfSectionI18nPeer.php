<?php


/**
 * Skeleton subclass for performing query and update operations on the 'sf_section_i18n' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Apr  8 16:08:35 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.section
 */
class SfSectionI18nPeer extends BaseSfSectionI18nPeer {

    public static function displaySections($id_padre, $id_profile)
    {
            //Obtengo el idioma principal
            $idioma_principal = SfLanguagePeer::getLanguagePrincipal();
            $c = new Criteria();
            //Eliminamos la columnas de seleccion en caso de que esten definidas
            $c->clearSelectColumns();
            //Se Agregan las Columnas necesarias
            $c->addSelectColumn(self::ID);
            $c->addSelectColumn(self::NAME_SECTION);
            $c->addSelectColumn(SfSectionPeer::POSITION);
            $c->addSelectColumn(SfSectionPeer::HOME);
            //Join
            $c->addJoin(self::ID, SfSectionPeer::ID, Criteria::INNER_JOIN);
            //Filtros
            if($id_profile > 2)
            {
                $c->add(SfSectionPeer::ID_PROFILE,$id_profile, Criteria::EQUAL);
            }
            $c->add(SfSectionPeer::ID_PARENT,$id_padre, Criteria::EQUAL);
            $c->add(self::LANGUAGE,$idioma_principal['language'],Criteria::EQUAL);
            $c->addAscendingOrderByColumn(SfSectionPeer::POSITION);
            $rs = self::doSelectStmt($c);
            //Se recuperan los registros y se genera arreglo            
            while($res = $rs->fetch())
            {
                $datoSeccion['id'] = $res['ID'];
                $datoSeccion['nameSection'] = $res['NAME_SECTION'];
                $datoSeccion['position'] = $res['POSITION'];
                $datoSeccion['home'] = $res['HOME'];
                $datos[] = $datoSeccion;
            }            
            if (!empty($datos)){
                    return $datos;
            }else{
                    return false;
            }
    }

    public static function getNameSection($idSection)
    {
        //Obtengo el idioma principal
        $idioma_principal = SfLanguagePeer::getLanguagePrincipal();
        $c = new Criteria();
        //Eliminamos la columnas de seleccion en caso de que esten definidas
        $c->clearSelectColumns();
        //Se Agregan las Columnas necesarias        
        $c->addSelectColumn(self::NAME_SECTION);                
        //Filtros
        $c->add(self::ID,$idSection, Criteria::EQUAL);
        $c->add(self::LANGUAGE,$idioma_principal['language'],Criteria::EQUAL);        
        $rs = self::doSelectStmt($c);
        //Se recuperan los registros y se genera arreglo
        while($res = $rs->fetch())
        {
            $datoSeccion['name_section'] = $res['NAME_SECTION'];
        }
        if (!empty($datoSeccion)){
            return $datoSeccion;
        }else{
            return false;
        }
    }
} // SfSectionI18nPeer
