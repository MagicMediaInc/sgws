<?php


/**
 * Skeleton subclass for performing query and update operations on the 'lx_privilege' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Wed Mar 31 11:38:08 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.lynx
 */
class LxPrivilegePeer extends BaseLxPrivilegePeer {
    /**
     * Return all privileges
     * @return <array>
     */
    public static function getAllPrivileges() {
        $c =  new Criteria();
        //Eliminamos la columnas de seleccion en caso de que esten definidas
        $c->clearSelectColumns();
        //Selecciona las columnas

        $c->addSelectColumn(self::ID_PRIVILEGE);
        $c->addSelectColumn(self::PRIVILEGE_NAME);
        $c->addSelectColumn(self::SF_PRIVILEGE);
        //Condicion
        
        //$c->add(self::ID_PRIVILEGE, 2, Criteria::LESS_EQUAL);
        $c->addAscendingOrderByColumn(self::ID_PRIVILEGE);
        //Ejecucion de consulta
        $rs = self::doSelectStmt($c);
        //Se recuperan los registros y se genera arreglo
        while($res = $rs->fetch()) {
            $dato['id_privilege'] = $res['ID_PRIVILEGE'];
            $dato['name_privilege'] = $res['PRIVILEGE_NAME'];
            $dato['sf_privilege'] = $res['SF_PRIVILEGE'];
            $datos[] = $dato;
        }
        if (!empty($datos)) {
            return $datos;
        }else {
            return false;
        }
    }
} // LxPrivilegePeer
