<?php


/**
 * Skeleton subclass for performing query and update operations on the 'analisis' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 12/12/2013 14:15:56
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.sgws
 */
class AnalisisPeer extends BaseAnalisisPeer {
    
    public static function getAnexoProposta($id)
    {
        $c = new Criteria();
        $c->add(self::ID_PROPOSTA_ANEXO, $id, Criteria::EQUAL);
        return self::doSelectOne($c);
    }
    
    public static function getRevisionesProposta($id)
    {
        $c = new Criteria();
        $c->add(self::ID_PROPOSTA, $id, Criteria::EQUAL);
        return self::doSelect($c);
    }
    
     public static function getAnalisis($id)
    {
        $c = new Criteria();
        $c->add(self::ID_PROPOSTA, $id, Criteria::EQUAL);
        return self::doSelect($c);
    }
    
    public static function getListaRevisiones()
    {
        $c = new Criteria();
        $c->addDescendingOrderByColumn(self::DATA_CREACION);
        return self::doSelect($c);
    }
    
    public static function actualizaDataAprobacion($Proposta)
    {
        if(self::getRevisionesProposta($Proposta->getCodigoProposta()))
        {
            $con = Propel::getConnection();

            // select from...
            $c1 = new Criteria();
            $c1->add(self::ID_PROPOSTA,$Proposta->getCodigoProposta(), Criteria::EQUAL);
            $c1->add(self::ANALISIS_PPAL,'1', Criteria::EQUAL);

            // update set
            $c2 = new Criteria();
            $c2->add(self::DATA_APROBACION, $Proposta->getDataIrProjeto());
            $c2->add(self::PRECIO, $Proposta->getValor());
            $c2->add(self::APROBACION_PROPOSTA, $Proposta->getStatus());

            BasePeer::doUpdate($c1, $c2, $con);
        }
    }
    
    public static function deleteAnalisisByAnexo($id)
    {
        $con = Propel::getConnection();

        // select from...
        $c1 = new Criteria();
        $c1->add(self::ID_PROPOSTA_ANEXO,$id, Criteria::EQUAL);
        
        BasePeer::doDelete($c1, $con);
    }
    
         public static function getAnalisisNameUser($arrayIdUsers,$tipo)
    {
        $c = new Criteria();
        if($tipo == 1){
        $c->add(self::ID_RESPONSAVEL, $arrayIdUsers, Criteria::IN);
        }else{
        $c->add(self::ID_CLIENTE, $arrayIdUsers, Criteria::IN);   
        }
        return self::doSelect($c);
    }
    

} // AnalisisPeer
