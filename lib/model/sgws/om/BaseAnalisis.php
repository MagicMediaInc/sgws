<?php

/**
 * Base class that represents a row from the 'analisis' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 03/04/2014 12:04:41
 *
 * @package    lib.model.sgws.om
 */
abstract class BaseAnalisis extends BaseObject  implements Persistent {


	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        AnalisisPeer
	 */
	protected static $peer;

	/**
	 * The value for the id field.
	 * @var        int
	 */
	protected $id;

	/**
	 * The value for the analisis_ppal field.
	 * Note: this column has a database default value of: '0'
	 * @var        string
	 */
	protected $analisis_ppal;

	/**
	 * The value for the id_proposta_anexo field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $id_proposta_anexo;

	/**
	 * The value for the id_proposta field.
	 * @var        int
	 */
	protected $id_proposta;

	/**
	 * The value for the id_responsavel field.
	 * @var        int
	 */
	protected $id_responsavel;

	/**
	 * The value for the id_cliente field.
	 * @var        int
	 */
	protected $id_cliente;

	/**
	 * The value for the status field.
	 * @var        string
	 */
	protected $status;

	/**
	 * The value for the data_creacion field.
	 * @var        string
	 */
	protected $data_creacion;

	/**
	 * The value for the data_aprobacion field.
	 * @var        string
	 */
	protected $data_aprobacion;

	/**
	 * The value for the descricao field.
	 * @var        string
	 */
	protected $descricao;

	/**
	 * The value for the plazo field.
	 * @var        int
	 */
	protected $plazo;

	/**
	 * The value for the viabilidade_tecnica field.
	 * @var        string
	 */
	protected $viabilidade_tecnica;

	/**
	 * The value for the equipamento_apropiado field.
	 * @var        string
	 */
	protected $equipamento_apropiado;

	/**
	 * The value for the metodologia_validada field.
	 * @var        string
	 */
	protected $metodologia_validada;

	/**
	 * The value for the quantidade_amostra field.
	 * @var        string
	 */
	protected $quantidade_amostra;

	/**
	 * The value for the viabilidade_operacional field.
	 * @var        string
	 */
	protected $viabilidade_operacional;

	/**
	 * The value for the tecnico_habilitado field.
	 * @var        string
	 */
	protected $tecnico_habilitado;

	/**
	 * The value for the mano_obra field.
	 * @var        string
	 */
	protected $mano_obra;

	/**
	 * The value for the plazo_exequivel field.
	 * @var        string
	 */
	protected $plazo_exequivel;

	/**
	 * The value for the viabilidade_financiera field.
	 * @var        string
	 */
	protected $viabilidade_financiera;

	/**
	 * The value for the valor_adecuado field.
	 * @var        string
	 */
	protected $valor_adecuado;

	/**
	 * The value for the plazo_pagamento field.
	 * @var        string
	 */
	protected $plazo_pagamento;

	/**
	 * The value for the tercerizado field.
	 * @var        string
	 */
	protected $tercerizado;

	/**
	 * The value for the id_fornecedor field.
	 * @var        int
	 */
	protected $id_fornecedor;

	/**
	 * The value for the valor_proposta field.
	 * @var        int
	 */
	protected $valor_proposta;

	/**
	 * The value for the aprobacion_cliente field.
	 * @var        string
	 */
	protected $aprobacion_cliente;

	/**
	 * The value for the responsable_comercial field.
	 * @var        int
	 */
	protected $responsable_comercial;

	/**
	 * The value for the aprobado_responsable_comercial field.
	 * @var        string
	 */
	protected $aprobado_responsable_comercial;

	/**
	 * The value for the responsable_tecnico field.
	 * @var        int
	 */
	protected $responsable_tecnico;

	/**
	 * The value for the aprobado_responsable_tecnico field.
	 * @var        string
	 */
	protected $aprobado_responsable_tecnico;

	/**
	 * The value for the aprobacion_proposta field.
	 * @var        string
	 */
	protected $aprobacion_proposta;

	/**
	 * The value for the codigo_proposta_final field.
	 * @var        int
	 */
	protected $codigo_proposta_final;

	/**
	 * The value for the validade_proposta field.
	 * @var        string
	 */
	protected $validade_proposta;

	/**
	 * The value for the forma_aprobacion field.
	 * @var        string
	 */
	protected $forma_aprobacion;

	/**
	 * The value for the precio field.
	 * @var        string
	 */
	protected $precio;

	/**
	 * The value for the forma_pagamento field.
	 * @var        string
	 */
	protected $forma_pagamento;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	// symfony behavior
	
        
        /**
	 * The value for the nome field.
	 * @var        string
	 */
	protected $nome;
        
	const PEER = 'AnalisisPeer';

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
		$this->analisis_ppal = '0';
		$this->id_proposta_anexo = 0;
	}

	/**
	 * Initializes internal state of BaseAnalisis object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Get the [id] column value.
	 * 
	 * @return     int
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * Get the [analisis_ppal] column value.
	 * 
	 * @return     string
	 */
	public function getAnalisisPpal()
	{
		return $this->analisis_ppal;
	}

	/**
	 * Get the [id_proposta_anexo] column value.
	 * 
	 * @return     int
	 */
	public function getIdPropostaAnexo()
	{
		return $this->id_proposta_anexo;
	}

	/**
	 * Get the [id_proposta] column value.
	 * 
	 * @return     int
	 */
	public function getIdProposta()
	{
		return $this->id_proposta;
	}

	/**
	 * Get the [id_responsavel] column value.
	 * 
	 * @return     int
	 */
	public function getIdResponsavel()
	{
		return $this->id_responsavel;
	}

	/**
	 * Get the [id_cliente] column value.
	 * 
	 * @return     int
	 */
	public function getIdCliente()
	{
		return $this->id_cliente;
	}

	/**
	 * Get the [status] column value.
	 * 
	 * @return     string
	 */
	public function getStatus()
	{
		return $this->status;
	}

	/**
	 * Get the [optionally formatted] temporal [data_creacion] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDataCreacion($format = 'Y-m-d')
	{
		if ($this->data_creacion === null) {
			return null;
		}


		if ($this->data_creacion === '0000-00-00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->data_creacion);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->data_creacion, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [optionally formatted] temporal [data_aprobacion] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDataAprobacion($format = 'Y-m-d')
	{
		if ($this->data_aprobacion === null) {
			return null;
		}


		if ($this->data_aprobacion === '0000-00-00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->data_aprobacion);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->data_aprobacion, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [descricao] column value.
	 * 
	 * @return     string
	 */
	public function getDescricao()
	{
		return $this->descricao;
	}

	/**
	 * Get the [plazo] column value.
	 * 
	 * @return     int
	 */
	public function getPlazo()
	{
		return $this->plazo;
	}

	/**
	 * Get the [viabilidade_tecnica] column value.
	 * 
	 * @return     string
	 */
	public function getViabilidadeTecnica()
	{
		return $this->viabilidade_tecnica;
	}

	/**
	 * Get the [equipamento_apropiado] column value.
	 * 
	 * @return     string
	 */
	public function getEquipamentoApropiado()
	{
		return $this->equipamento_apropiado;
	}

	/**
	 * Get the [metodologia_validada] column value.
	 * 
	 * @return     string
	 */
	public function getMetodologiaValidada()
	{
		return $this->metodologia_validada;
	}

	/**
	 * Get the [quantidade_amostra] column value.
	 * 
	 * @return     string
	 */
	public function getQuantidadeAmostra()
	{
		return $this->quantidade_amostra;
	}

	/**
	 * Get the [viabilidade_operacional] column value.
	 * 
	 * @return     string
	 */
	public function getViabilidadeOperacional()
	{
		return $this->viabilidade_operacional;
	}

	/**
	 * Get the [tecnico_habilitado] column value.
	 * 
	 * @return     string
	 */
	public function getTecnicoHabilitado()
	{
		return $this->tecnico_habilitado;
	}

	/**
	 * Get the [mano_obra] column value.
	 * 
	 * @return     string
	 */
	public function getManoObra()
	{
		return $this->mano_obra;
	}

	/**
	 * Get the [plazo_exequivel] column value.
	 * 
	 * @return     string
	 */
	public function getPlazoExequivel()
	{
		return $this->plazo_exequivel;
	}

	/**
	 * Get the [viabilidade_financiera] column value.
	 * 
	 * @return     string
	 */
	public function getViabilidadeFinanciera()
	{
		return $this->viabilidade_financiera;
	}

	/**
	 * Get the [valor_adecuado] column value.
	 * 
	 * @return     string
	 */
	public function getValorAdecuado()
	{
		return $this->valor_adecuado;
	}

	/**
	 * Get the [plazo_pagamento] column value.
	 * 
	 * @return     string
	 */
	public function getPlazoPagamento()
	{
		return $this->plazo_pagamento;
	}

	/**
	 * Get the [tercerizado] column value.
	 * 
	 * @return     string
	 */
	public function getTercerizado()
	{
		return $this->tercerizado;
	}

	/**
	 * Get the [id_fornecedor] column value.
	 * 
	 * @return     int
	 */
	public function getIdFornecedor()
	{
		return $this->id_fornecedor;
	}

	/**
	 * Get the [valor_proposta] column value.
	 * 
	 * @return     int
	 */
	public function getValorProposta()
	{
		return $this->valor_proposta;
	}

	/**
	 * Get the [aprobacion_cliente] column value.
	 * 
	 * @return     string
	 */
	public function getAprobacionCliente()
	{
		return $this->aprobacion_cliente;
	}

	/**
	 * Get the [responsable_comercial] column value.
	 * 
	 * @return     int
	 */
	public function getResponsableComercial()
	{
		return $this->responsable_comercial;
	}

	/**
	 * Get the [aprobado_responsable_comercial] column value.
	 * 
	 * @return     string
	 */
	public function getAprobadoResponsableComercial()
	{
		return $this->aprobado_responsable_comercial;
	}

	/**
	 * Get the [responsable_tecnico] column value.
	 * 
	 * @return     int
	 */
	public function getResponsableTecnico()
	{
		return $this->responsable_tecnico;
	}

	/**
	 * Get the [aprobado_responsable_tecnico] column value.
	 * 
	 * @return     string
	 */
	public function getAprobadoResponsableTecnico()
	{
		return $this->aprobado_responsable_tecnico;
	}

	/**
	 * Get the [aprobacion_proposta] column value.
	 * 
	 * @return     string
	 */
	public function getAprobacionProposta()
	{
		return $this->aprobacion_proposta;
	}

	/**
	 * Get the [codigo_proposta_final] column value.
	 * 
	 * @return     int
	 */
	public function getCodigoPropostaFinal()
	{
		return $this->codigo_proposta_final;
	}

	/**
	 * Get the [validade_proposta] column value.
	 * 
	 * @return     string
	 */
	public function getValidadeProposta()
	{
		return $this->validade_proposta;
	}

	/**
	 * Get the [forma_aprobacion] column value.
	 * 
	 * @return     string
	 */
	public function getFormaAprobacion()
	{
		return $this->forma_aprobacion;
	}

	/**
	 * Get the [precio] column value.
	 * 
	 * @return     string
	 */
	public function getPrecio()
	{
		return $this->precio;
	}

        
        /**
	 * Get the [nome] column value.
	 * 
	 * @return     string
	 */
	public function getNome()
	{
		return $this->nome;
        }
	/**
	 * Get the [forma_pagamento] column value.
	 * 
	 * @return     string
	 */
	public function getFormaPagamento()
	{
		return $this->forma_pagamento;
	}

	/**
	 * Set the value of [id] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id !== $v) {
			$this->id = $v;
			$this->modifiedColumns[] = AnalisisPeer::ID;
		}

		return $this;
	} // setId()

	/**
	 * Set the value of [analisis_ppal] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setAnalisisPpal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->analisis_ppal !== $v || $this->isNew()) {
			$this->analisis_ppal = $v;
			$this->modifiedColumns[] = AnalisisPeer::ANALISIS_PPAL;
		}

		return $this;
	} // setAnalisisPpal()

	/**
	 * Set the value of [id_proposta_anexo] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setIdPropostaAnexo($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_proposta_anexo !== $v || $this->isNew()) {
			$this->id_proposta_anexo = $v;
			$this->modifiedColumns[] = AnalisisPeer::ID_PROPOSTA_ANEXO;
		}

		return $this;
	} // setIdPropostaAnexo()

	/**
	 * Set the value of [id_proposta] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setIdProposta($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_proposta !== $v) {
			$this->id_proposta = $v;
			$this->modifiedColumns[] = AnalisisPeer::ID_PROPOSTA;
		}

		return $this;
	} // setIdProposta()

	/**
	 * Set the value of [id_responsavel] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setIdResponsavel($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_responsavel !== $v) {
			$this->id_responsavel = $v;
			$this->modifiedColumns[] = AnalisisPeer::ID_RESPONSAVEL;
		}

		return $this;
	} // setIdResponsavel()

	/**
	 * Set the value of [id_cliente] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setIdCliente($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_cliente !== $v) {
			$this->id_cliente = $v;
			$this->modifiedColumns[] = AnalisisPeer::ID_CLIENTE;
		}

		return $this;
	} // setIdCliente()

	/**
	 * Set the value of [status] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setStatus($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->status !== $v) {
			$this->status = $v;
			$this->modifiedColumns[] = AnalisisPeer::STATUS;
		}

		return $this;
	} // setStatus()

	/**
	 * Sets the value of [data_creacion] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setDataCreacion($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->data_creacion !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->data_creacion !== null && $tmpDt = new DateTime($this->data_creacion)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->data_creacion = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = AnalisisPeer::DATA_CREACION;
			}
		} // if either are not null

		return $this;
	} // setDataCreacion()

	/**
	 * Sets the value of [data_aprobacion] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setDataAprobacion($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->data_aprobacion !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->data_aprobacion !== null && $tmpDt = new DateTime($this->data_aprobacion)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->data_aprobacion = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = AnalisisPeer::DATA_APROBACION;
			}
		} // if either are not null

		return $this;
	} // setDataAprobacion()

	/**
	 * Set the value of [descricao] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setDescricao($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->descricao !== $v) {
			$this->descricao = $v;
			$this->modifiedColumns[] = AnalisisPeer::DESCRICAO;
		}

		return $this;
	} // setDescricao()

	/**
	 * Set the value of [plazo] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setPlazo($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->plazo !== $v) {
			$this->plazo = $v;
			$this->modifiedColumns[] = AnalisisPeer::PLAZO;
		}

		return $this;
	} // setPlazo()

	/**
	 * Set the value of [viabilidade_tecnica] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setViabilidadeTecnica($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->viabilidade_tecnica !== $v) {
			$this->viabilidade_tecnica = $v;
			$this->modifiedColumns[] = AnalisisPeer::VIABILIDADE_TECNICA;
		}

		return $this;
	} // setViabilidadeTecnica()

	/**
	 * Set the value of [equipamento_apropiado] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setEquipamentoApropiado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->equipamento_apropiado !== $v) {
			$this->equipamento_apropiado = $v;
			$this->modifiedColumns[] = AnalisisPeer::EQUIPAMENTO_APROPIADO;
		}

		return $this;
	} // setEquipamentoApropiado()

	/**
	 * Set the value of [metodologia_validada] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setMetodologiaValidada($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->metodologia_validada !== $v) {
			$this->metodologia_validada = $v;
			$this->modifiedColumns[] = AnalisisPeer::METODOLOGIA_VALIDADA;
		}

		return $this;
	} // setMetodologiaValidada()

	/**
	 * Set the value of [quantidade_amostra] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setQuantidadeAmostra($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->quantidade_amostra !== $v) {
			$this->quantidade_amostra = $v;
			$this->modifiedColumns[] = AnalisisPeer::QUANTIDADE_AMOSTRA;
		}

		return $this;
	} // setQuantidadeAmostra()

	/**
	 * Set the value of [viabilidade_operacional] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setViabilidadeOperacional($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->viabilidade_operacional !== $v) {
			$this->viabilidade_operacional = $v;
			$this->modifiedColumns[] = AnalisisPeer::VIABILIDADE_OPERACIONAL;
		}

		return $this;
	} // setViabilidadeOperacional()

	/**
	 * Set the value of [tecnico_habilitado] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setTecnicoHabilitado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tecnico_habilitado !== $v) {
			$this->tecnico_habilitado = $v;
			$this->modifiedColumns[] = AnalisisPeer::TECNICO_HABILITADO;
		}

		return $this;
	} // setTecnicoHabilitado()

	/**
	 * Set the value of [mano_obra] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setManoObra($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mano_obra !== $v) {
			$this->mano_obra = $v;
			$this->modifiedColumns[] = AnalisisPeer::MANO_OBRA;
		}

		return $this;
	} // setManoObra()

	/**
	 * Set the value of [plazo_exequivel] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setPlazoExequivel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->plazo_exequivel !== $v) {
			$this->plazo_exequivel = $v;
			$this->modifiedColumns[] = AnalisisPeer::PLAZO_EXEQUIVEL;
		}

		return $this;
	} // setPlazoExequivel()

	/**
	 * Set the value of [viabilidade_financiera] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setViabilidadeFinanciera($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->viabilidade_financiera !== $v) {
			$this->viabilidade_financiera = $v;
			$this->modifiedColumns[] = AnalisisPeer::VIABILIDADE_FINANCIERA;
		}

		return $this;
	} // setViabilidadeFinanciera()

	/**
	 * Set the value of [valor_adecuado] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setValorAdecuado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->valor_adecuado !== $v) {
			$this->valor_adecuado = $v;
			$this->modifiedColumns[] = AnalisisPeer::VALOR_ADECUADO;
		}

		return $this;
	} // setValorAdecuado()

	/**
	 * Set the value of [plazo_pagamento] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setPlazoPagamento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->plazo_pagamento !== $v) {
			$this->plazo_pagamento = $v;
			$this->modifiedColumns[] = AnalisisPeer::PLAZO_PAGAMENTO;
		}

		return $this;
	} // setPlazoPagamento()

	/**
	 * Set the value of [tercerizado] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setTercerizado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tercerizado !== $v) {
			$this->tercerizado = $v;
			$this->modifiedColumns[] = AnalisisPeer::TERCERIZADO;
		}

		return $this;
	} // setTercerizado()

	/**
	 * Set the value of [id_fornecedor] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setIdFornecedor($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_fornecedor !== $v) {
			$this->id_fornecedor = $v;
			$this->modifiedColumns[] = AnalisisPeer::ID_FORNECEDOR;
		}

		return $this;
	} // setIdFornecedor()

	/**
	 * Set the value of [valor_proposta] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setValorProposta($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->valor_proposta !== $v) {
			$this->valor_proposta = $v;
			$this->modifiedColumns[] = AnalisisPeer::VALOR_PROPOSTA;
		}

		return $this;
	} // setValorProposta()

	/**
	 * Set the value of [aprobacion_cliente] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setAprobacionCliente($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aprobacion_cliente !== $v) {
			$this->aprobacion_cliente = $v;
			$this->modifiedColumns[] = AnalisisPeer::APROBACION_CLIENTE;
		}

		return $this;
	} // setAprobacionCliente()

	/**
	 * Set the value of [responsable_comercial] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setResponsableComercial($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->responsable_comercial !== $v) {
			$this->responsable_comercial = $v;
			$this->modifiedColumns[] = AnalisisPeer::RESPONSABLE_COMERCIAL;
		}

		return $this;
	} // setResponsableComercial()

	/**
	 * Set the value of [aprobado_responsable_comercial] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setAprobadoResponsableComercial($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aprobado_responsable_comercial !== $v) {
			$this->aprobado_responsable_comercial = $v;
			$this->modifiedColumns[] = AnalisisPeer::APROBADO_RESPONSABLE_COMERCIAL;
		}

		return $this;
	} // setAprobadoResponsableComercial()

	/**
	 * Set the value of [responsable_tecnico] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setResponsableTecnico($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->responsable_tecnico !== $v) {
			$this->responsable_tecnico = $v;
			$this->modifiedColumns[] = AnalisisPeer::RESPONSABLE_TECNICO;
		}

		return $this;
	} // setResponsableTecnico()

	/**
	 * Set the value of [aprobado_responsable_tecnico] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setAprobadoResponsableTecnico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aprobado_responsable_tecnico !== $v) {
			$this->aprobado_responsable_tecnico = $v;
			$this->modifiedColumns[] = AnalisisPeer::APROBADO_RESPONSABLE_TECNICO;
		}

		return $this;
	} // setAprobadoResponsableTecnico()

	/**
	 * Set the value of [aprobacion_proposta] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setAprobacionProposta($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aprobacion_proposta !== $v) {
			$this->aprobacion_proposta = $v;
			$this->modifiedColumns[] = AnalisisPeer::APROBACION_PROPOSTA;
		}

		return $this;
	} // setAprobacionProposta()

	/**
	 * Set the value of [codigo_proposta_final] column.
	 * 
	 * @param      int $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setCodigoPropostaFinal($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->codigo_proposta_final !== $v) {
			$this->codigo_proposta_final = $v;
			$this->modifiedColumns[] = AnalisisPeer::CODIGO_PROPOSTA_FINAL;
		}

		return $this;
	} // setCodigoPropostaFinal()

	/**
	 * Set the value of [validade_proposta] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setValidadeProposta($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->validade_proposta !== $v) {
			$this->validade_proposta = $v;
			$this->modifiedColumns[] = AnalisisPeer::VALIDADE_PROPOSTA;
		}

		return $this;
	} // setValidadeProposta()

	/**
	 * Set the value of [forma_aprobacion] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setFormaAprobacion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->forma_aprobacion !== $v) {
			$this->forma_aprobacion = $v;
			$this->modifiedColumns[] = AnalisisPeer::FORMA_APROBACION;
		}

		return $this;
	} // setFormaAprobacion()

	/**
	 * Set the value of [precio] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setPrecio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->precio !== $v) {
			$this->precio = $v;
			$this->modifiedColumns[] = AnalisisPeer::PRECIO;
		}

		return $this;
	} // setPrecio()
        
        	/**
	 * Set the value of [nome] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setNome($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->nome !== $v) {
			$this->nome = $v;
			$this->modifiedColumns[] = AnalisisPeer::NOME;
		}

		return $this;
	} // setNome()

	/**
	 * Set the value of [forma_pagamento] column.
	 * 
	 * @param      string $v new value
	 * @return     Analisis The current object (for fluent API support)
	 */
	public function setFormaPagamento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->forma_pagamento !== $v) {
			$this->forma_pagamento = $v;
			$this->modifiedColumns[] = AnalisisPeer::FORMA_PAGAMENTO;
		}

		return $this;
	} // setFormaPagamento()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			if ($this->analisis_ppal !== '0') {
				return false;
			}

			if ($this->id_proposta_anexo !== 0) {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->id = (isset($row[$startcol + 0]) && $row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->analisis_ppal = (isset($row[$startcol + 1]) && $row[$startcol + 1] !== null) ? (string) $row[$startcol + 1] : null;
			$this->id_proposta_anexo = (isset($row[$startcol + 2]) && $row[$startcol + 2] !== null) ? (int) $row[$startcol + 2] : null;
			$this->id_proposta = (isset($row[$startcol + 3]) && $row[$startcol + 3] !== null) ? (int) $row[$startcol + 3] : null;
			$this->id_responsavel = (isset($row[$startcol + 4]) && $row[$startcol + 4] !== null) ? (int) $row[$startcol + 4] : null;
			$this->id_cliente = (isset($row[$startcol + 5]) && $row[$startcol + 5] !== null) ? (int) $row[$startcol + 5] : null;
			$this->status = (isset($row[$startcol + 6]) && $row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->data_creacion = (isset($row[$startcol + 7]) && $row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->data_aprobacion = (isset($row[$startcol + 8]) && $row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->descricao = (isset($row[$startcol + 9]) && $row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->plazo = (isset($row[$startcol + 10]) && $row[$startcol + 10] !== null) ? (int) $row[$startcol + 10] : null;
			$this->viabilidade_tecnica = (isset($row[$startcol + 11]) && $row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->equipamento_apropiado = (isset($row[$startcol + 12]) && $row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->metodologia_validada = (isset($row[$startcol + 13]) && $row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->quantidade_amostra = (isset($row[$startcol + 14]) && $row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->viabilidade_operacional = (isset($row[$startcol + 15]) && $row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->tecnico_habilitado = (isset($row[$startcol + 16]) && $row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->mano_obra = (isset($row[$startcol + 17]) && $row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->plazo_exequivel = (isset($row[$startcol + 18]) && $row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->viabilidade_financiera = (isset($row[$startcol + 19]) && $row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->valor_adecuado = (isset($row[$startcol + 20]) && $row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->plazo_pagamento = (isset($row[$startcol + 21]) && $row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->tercerizado = (isset($row[$startcol + 22]) && $row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->id_fornecedor = (isset($row[$startcol + 23]) && $row[$startcol + 23] !== null) ? (int) $row[$startcol + 23] : null;
			$this->valor_proposta = (isset($row[$startcol + 24]) && $row[$startcol + 24] !== null) ? (int) $row[$startcol + 24] : null;
			$this->aprobacion_cliente = (isset($row[$startcol + 25]) && $row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->responsable_comercial = (isset($row[$startcol + 26]) && $row[$startcol + 26] !== null) ? (int) $row[$startcol + 26] : null;
			$this->aprobado_responsable_comercial = (isset($row[$startcol + 27]) && $row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->responsable_tecnico = (isset($row[$startcol + 28]) && $row[$startcol + 28] !== null) ? (int) $row[$startcol + 28] : null;
			$this->aprobado_responsable_tecnico = (isset($row[$startcol + 29]) && $row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->aprobacion_proposta = (isset($row[$startcol + 30]) && $row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->codigo_proposta_final = (isset($row[$startcol + 31]) && $row[$startcol + 31] !== null) ? (int) $row[$startcol + 31] : null;
			$this->validade_proposta = (isset($row[$startcol + 32]) && $row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->forma_aprobacion = (isset($row[$startcol + 33]) && $row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->precio = (isset($row[$startcol + 34]) && $row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->forma_pagamento = (isset($row[$startcol + 35]) && $row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->nome = (isset($row[$startcol + 36]) && $row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
                        $this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 37; // 36 = AnalisisPeer::NUM_COLUMNS - AnalisisPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating Analisis object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AnalisisPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = AnalisisPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AnalisisPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$ret = $this->preDelete($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseAnalisis:delete:pre') as $callable)
			{
			  if ($ret = call_user_func($callable, $this, $con))
			  {
			    return;
			  }
			}

			if ($ret) {
				AnalisisPeer::doDelete($this, $con);
				$this->postDelete($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseAnalisis:delete:post') as $callable)
				{
				  call_user_func($callable, $this, $con);
				}

				$this->setDeleted(true);
				$con->commit();
			} else {
				$con->commit();
			}
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AnalisisPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		$isInsert = $this->isNew();
		try {
			$ret = $this->preSave($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseAnalisis:save:pre') as $callable)
			{
			  if (is_integer($affectedRows = call_user_func($callable, $this, $con)))
			  {
			    return $affectedRows;
			  }
			}

			if ($isInsert) {
				$ret = $ret && $this->preInsert($con);
			} else {
				$ret = $ret && $this->preUpdate($con);
			}
			if ($ret) {
				$affectedRows = $this->doSave($con);
				if ($isInsert) {
					$this->postInsert($con);
				} else {
					$this->postUpdate($con);
				}
				$this->postSave($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseAnalisis:save:post') as $callable)
				{
				  call_user_func($callable, $this, $con, $affectedRows);
				}

				AnalisisPeer::addInstanceToPool($this);
			} else {
				$affectedRows = 0;
			}
			$con->commit();
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			if ($this->isNew() ) {
				$this->modifiedColumns[] = AnalisisPeer::ID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = AnalisisPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setId($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += AnalisisPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = AnalisisPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = AnalisisPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getId();
				break;
			case 1:
				return $this->getAnalisisPpal();
				break;
			case 2:
				return $this->getIdPropostaAnexo();
				break;
			case 3:
				return $this->getIdProposta();
				break;
			case 4:
				return $this->getIdResponsavel();
				break;
			case 5:
				return $this->getIdCliente();
				break;
			case 6:
				return $this->getStatus();
				break;
			case 7:
				return $this->getDataCreacion();
				break;
			case 8:
				return $this->getDataAprobacion();
				break;
			case 9:
				return $this->getDescricao();
				break;
			case 10:
				return $this->getPlazo();
				break;
			case 11:
				return $this->getViabilidadeTecnica();
				break;
			case 12:
				return $this->getEquipamentoApropiado();
				break;
			case 13:
				return $this->getMetodologiaValidada();
				break;
			case 14:
				return $this->getQuantidadeAmostra();
				break;
			case 15:
				return $this->getViabilidadeOperacional();
				break;
			case 16:
				return $this->getTecnicoHabilitado();
				break;
			case 17:
				return $this->getManoObra();
				break;
			case 18:
				return $this->getPlazoExequivel();
				break;
			case 19:
				return $this->getViabilidadeFinanciera();
				break;
			case 20:
				return $this->getValorAdecuado();
				break;
			case 21:
				return $this->getPlazoPagamento();
				break;
			case 22:
				return $this->getTercerizado();
				break;
			case 23:
				return $this->getIdFornecedor();
				break;
			case 24:
				return $this->getValorProposta();
				break;
			case 25:
				return $this->getAprobacionCliente();
				break;
			case 26:
				return $this->getResponsableComercial();
				break;
			case 27:
				return $this->getAprobadoResponsableComercial();
				break;
			case 28:
				return $this->getResponsableTecnico();
				break;
			case 29:
				return $this->getAprobadoResponsableTecnico();
				break;
			case 30:
				return $this->getAprobacionProposta();
				break;
			case 31:
				return $this->getCodigoPropostaFinal();
				break;
			case 32:
				return $this->getValidadeProposta();
				break;
			case 33:
				return $this->getFormaAprobacion();
				break;
			case 34:
				return $this->getPrecio();
				break;
			case 35:
				return $this->getFormaPagamento();
				break;
                        case 36:
				return $this->getNome();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = AnalisisPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getId(),
			$keys[1] => $this->getAnalisisPpal(),
			$keys[2] => $this->getIdPropostaAnexo(),
			$keys[3] => $this->getIdProposta(),
			$keys[4] => $this->getIdResponsavel(),
			$keys[5] => $this->getIdCliente(),
			$keys[6] => $this->getStatus(),
			$keys[7] => $this->getDataCreacion(),
			$keys[8] => $this->getDataAprobacion(),
			$keys[9] => $this->getDescricao(),
			$keys[10] => $this->getPlazo(),
			$keys[11] => $this->getViabilidadeTecnica(),
			$keys[12] => $this->getEquipamentoApropiado(),
			$keys[13] => $this->getMetodologiaValidada(),
			$keys[14] => $this->getQuantidadeAmostra(),
			$keys[15] => $this->getViabilidadeOperacional(),
			$keys[16] => $this->getTecnicoHabilitado(),
			$keys[17] => $this->getManoObra(),
			$keys[18] => $this->getPlazoExequivel(),
			$keys[19] => $this->getViabilidadeFinanciera(),
			$keys[20] => $this->getValorAdecuado(),
			$keys[21] => $this->getPlazoPagamento(),
			$keys[22] => $this->getTercerizado(),
			$keys[23] => $this->getIdFornecedor(),
			$keys[24] => $this->getValorProposta(),
			$keys[25] => $this->getAprobacionCliente(),
			$keys[26] => $this->getResponsableComercial(),
			$keys[27] => $this->getAprobadoResponsableComercial(),
			$keys[28] => $this->getResponsableTecnico(),
			$keys[29] => $this->getAprobadoResponsableTecnico(),
			$keys[30] => $this->getAprobacionProposta(),
			$keys[31] => $this->getCodigoPropostaFinal(),
			$keys[32] => $this->getValidadeProposta(),
			$keys[33] => $this->getFormaAprobacion(),
			$keys[34] => $this->getPrecio(),
			$keys[35] => $this->getFormaPagamento(),
                        $keys[36] => $this->getNome(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = AnalisisPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setId($value);
				break;
			case 1:
				$this->setAnalisisPpal($value);
				break;
			case 2:
				$this->setIdPropostaAnexo($value);
				break;
			case 3:
				$this->setIdProposta($value);
				break;
			case 4:
				$this->setIdResponsavel($value);
				break;
			case 5:
				$this->setIdCliente($value);
				break;
			case 6:
				$this->setStatus($value);
				break;
			case 7:
				$this->setDataCreacion($value);
				break;
			case 8:
				$this->setDataAprobacion($value);
				break;
			case 9:
				$this->setDescricao($value);
				break;
			case 10:
				$this->setPlazo($value);
				break;
			case 11:
				$this->setViabilidadeTecnica($value);
				break;
			case 12:
				$this->setEquipamentoApropiado($value);
				break;
			case 13:
				$this->setMetodologiaValidada($value);
				break;
			case 14:
				$this->setQuantidadeAmostra($value);
				break;
			case 15:
				$this->setViabilidadeOperacional($value);
				break;
			case 16:
				$this->setTecnicoHabilitado($value);
				break;
			case 17:
				$this->setManoObra($value);
				break;
			case 18:
				$this->setPlazoExequivel($value);
				break;
			case 19:
				$this->setViabilidadeFinanciera($value);
				break;
			case 20:
				$this->setValorAdecuado($value);
				break;
			case 21:
				$this->setPlazoPagamento($value);
				break;
			case 22:
				$this->setTercerizado($value);
				break;
			case 23:
				$this->setIdFornecedor($value);
				break;
			case 24:
				$this->setValorProposta($value);
				break;
			case 25:
				$this->setAprobacionCliente($value);
				break;
			case 26:
				$this->setResponsableComercial($value);
				break;
			case 27:
				$this->setAprobadoResponsableComercial($value);
				break;
			case 28:
				$this->setResponsableTecnico($value);
				break;
			case 29:
				$this->setAprobadoResponsableTecnico($value);
				break;
			case 30:
				$this->setAprobacionProposta($value);
				break;
			case 31:
				$this->setCodigoPropostaFinal($value);
				break;
			case 32:
				$this->setValidadeProposta($value);
				break;
			case 33:
				$this->setFormaAprobacion($value);
				break;
			case 34:
				$this->setPrecio($value);
				break;
			case 35:
				$this->setFormaPagamento($value);
				break;
                        case 36:
				$this->setNome($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = AnalisisPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setId($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setAnalisisPpal($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setIdPropostaAnexo($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setIdProposta($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setIdResponsavel($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setIdCliente($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setStatus($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setDataCreacion($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setDataAprobacion($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setDescricao($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setPlazo($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setViabilidadeTecnica($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setEquipamentoApropiado($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setMetodologiaValidada($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setQuantidadeAmostra($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setViabilidadeOperacional($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setTecnicoHabilitado($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setManoObra($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setPlazoExequivel($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setViabilidadeFinanciera($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setValorAdecuado($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setPlazoPagamento($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setTercerizado($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setIdFornecedor($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setValorProposta($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setAprobacionCliente($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setResponsableComercial($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setAprobadoResponsableComercial($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setResponsableTecnico($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setAprobadoResponsableTecnico($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setAprobacionProposta($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setCodigoPropostaFinal($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setValidadeProposta($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setFormaAprobacion($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setPrecio($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setFormaPagamento($arr[$keys[35]]);
                if (array_key_exists($keys[36], $arr)) $this->setNome($arr[$keys[36]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(AnalisisPeer::DATABASE_NAME);

		if ($this->isColumnModified(AnalisisPeer::ID)) $criteria->add(AnalisisPeer::ID, $this->id);
		if ($this->isColumnModified(AnalisisPeer::ANALISIS_PPAL)) $criteria->add(AnalisisPeer::ANALISIS_PPAL, $this->analisis_ppal);
		if ($this->isColumnModified(AnalisisPeer::ID_PROPOSTA_ANEXO)) $criteria->add(AnalisisPeer::ID_PROPOSTA_ANEXO, $this->id_proposta_anexo);
		if ($this->isColumnModified(AnalisisPeer::ID_PROPOSTA)) $criteria->add(AnalisisPeer::ID_PROPOSTA, $this->id_proposta);
		if ($this->isColumnModified(AnalisisPeer::ID_RESPONSAVEL)) $criteria->add(AnalisisPeer::ID_RESPONSAVEL, $this->id_responsavel);
		if ($this->isColumnModified(AnalisisPeer::ID_CLIENTE)) $criteria->add(AnalisisPeer::ID_CLIENTE, $this->id_cliente);
		if ($this->isColumnModified(AnalisisPeer::STATUS)) $criteria->add(AnalisisPeer::STATUS, $this->status);
		if ($this->isColumnModified(AnalisisPeer::DATA_CREACION)) $criteria->add(AnalisisPeer::DATA_CREACION, $this->data_creacion);
		if ($this->isColumnModified(AnalisisPeer::DATA_APROBACION)) $criteria->add(AnalisisPeer::DATA_APROBACION, $this->data_aprobacion);
		if ($this->isColumnModified(AnalisisPeer::DESCRICAO)) $criteria->add(AnalisisPeer::DESCRICAO, $this->descricao);
		if ($this->isColumnModified(AnalisisPeer::PLAZO)) $criteria->add(AnalisisPeer::PLAZO, $this->plazo);
		if ($this->isColumnModified(AnalisisPeer::VIABILIDADE_TECNICA)) $criteria->add(AnalisisPeer::VIABILIDADE_TECNICA, $this->viabilidade_tecnica);
		if ($this->isColumnModified(AnalisisPeer::EQUIPAMENTO_APROPIADO)) $criteria->add(AnalisisPeer::EQUIPAMENTO_APROPIADO, $this->equipamento_apropiado);
		if ($this->isColumnModified(AnalisisPeer::METODOLOGIA_VALIDADA)) $criteria->add(AnalisisPeer::METODOLOGIA_VALIDADA, $this->metodologia_validada);
		if ($this->isColumnModified(AnalisisPeer::QUANTIDADE_AMOSTRA)) $criteria->add(AnalisisPeer::QUANTIDADE_AMOSTRA, $this->quantidade_amostra);
		if ($this->isColumnModified(AnalisisPeer::VIABILIDADE_OPERACIONAL)) $criteria->add(AnalisisPeer::VIABILIDADE_OPERACIONAL, $this->viabilidade_operacional);
		if ($this->isColumnModified(AnalisisPeer::TECNICO_HABILITADO)) $criteria->add(AnalisisPeer::TECNICO_HABILITADO, $this->tecnico_habilitado);
		if ($this->isColumnModified(AnalisisPeer::MANO_OBRA)) $criteria->add(AnalisisPeer::MANO_OBRA, $this->mano_obra);
		if ($this->isColumnModified(AnalisisPeer::PLAZO_EXEQUIVEL)) $criteria->add(AnalisisPeer::PLAZO_EXEQUIVEL, $this->plazo_exequivel);
		if ($this->isColumnModified(AnalisisPeer::VIABILIDADE_FINANCIERA)) $criteria->add(AnalisisPeer::VIABILIDADE_FINANCIERA, $this->viabilidade_financiera);
		if ($this->isColumnModified(AnalisisPeer::VALOR_ADECUADO)) $criteria->add(AnalisisPeer::VALOR_ADECUADO, $this->valor_adecuado);
		if ($this->isColumnModified(AnalisisPeer::PLAZO_PAGAMENTO)) $criteria->add(AnalisisPeer::PLAZO_PAGAMENTO, $this->plazo_pagamento);
		if ($this->isColumnModified(AnalisisPeer::TERCERIZADO)) $criteria->add(AnalisisPeer::TERCERIZADO, $this->tercerizado);
		if ($this->isColumnModified(AnalisisPeer::ID_FORNECEDOR)) $criteria->add(AnalisisPeer::ID_FORNECEDOR, $this->id_fornecedor);
		if ($this->isColumnModified(AnalisisPeer::VALOR_PROPOSTA)) $criteria->add(AnalisisPeer::VALOR_PROPOSTA, $this->valor_proposta);
		if ($this->isColumnModified(AnalisisPeer::APROBACION_CLIENTE)) $criteria->add(AnalisisPeer::APROBACION_CLIENTE, $this->aprobacion_cliente);
		if ($this->isColumnModified(AnalisisPeer::RESPONSABLE_COMERCIAL)) $criteria->add(AnalisisPeer::RESPONSABLE_COMERCIAL, $this->responsable_comercial);
		if ($this->isColumnModified(AnalisisPeer::APROBADO_RESPONSABLE_COMERCIAL)) $criteria->add(AnalisisPeer::APROBADO_RESPONSABLE_COMERCIAL, $this->aprobado_responsable_comercial);
		if ($this->isColumnModified(AnalisisPeer::RESPONSABLE_TECNICO)) $criteria->add(AnalisisPeer::RESPONSABLE_TECNICO, $this->responsable_tecnico);
		if ($this->isColumnModified(AnalisisPeer::APROBADO_RESPONSABLE_TECNICO)) $criteria->add(AnalisisPeer::APROBADO_RESPONSABLE_TECNICO, $this->aprobado_responsable_tecnico);
		if ($this->isColumnModified(AnalisisPeer::APROBACION_PROPOSTA)) $criteria->add(AnalisisPeer::APROBACION_PROPOSTA, $this->aprobacion_proposta);
		if ($this->isColumnModified(AnalisisPeer::CODIGO_PROPOSTA_FINAL)) $criteria->add(AnalisisPeer::CODIGO_PROPOSTA_FINAL, $this->codigo_proposta_final);
		if ($this->isColumnModified(AnalisisPeer::VALIDADE_PROPOSTA)) $criteria->add(AnalisisPeer::VALIDADE_PROPOSTA, $this->validade_proposta);
		if ($this->isColumnModified(AnalisisPeer::FORMA_APROBACION)) $criteria->add(AnalisisPeer::FORMA_APROBACION, $this->forma_aprobacion);
		if ($this->isColumnModified(AnalisisPeer::PRECIO)) $criteria->add(AnalisisPeer::PRECIO, $this->precio);
		if ($this->isColumnModified(AnalisisPeer::FORMA_PAGAMENTO)) $criteria->add(AnalisisPeer::FORMA_PAGAMENTO, $this->forma_pagamento);
                if ($this->isColumnModified(AnalisisPeer::NOME)) $criteria->add(AnalisisPeer::NOME, $this->nome);
		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(AnalisisPeer::DATABASE_NAME);

		$criteria->add(AnalisisPeer::ID, $this->id);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getId();
	}

	/**
	 * Generic method to set the primary key (id column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setId($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of Analisis (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setAnalisisPpal($this->analisis_ppal);

		$copyObj->setIdPropostaAnexo($this->id_proposta_anexo);

		$copyObj->setIdProposta($this->id_proposta);

		$copyObj->setIdResponsavel($this->id_responsavel);

		$copyObj->setIdCliente($this->id_cliente);

		$copyObj->setStatus($this->status);

		$copyObj->setDataCreacion($this->data_creacion);

		$copyObj->setDataAprobacion($this->data_aprobacion);

		$copyObj->setDescricao($this->descricao);

		$copyObj->setPlazo($this->plazo);

		$copyObj->setViabilidadeTecnica($this->viabilidade_tecnica);

		$copyObj->setEquipamentoApropiado($this->equipamento_apropiado);

		$copyObj->setMetodologiaValidada($this->metodologia_validada);

		$copyObj->setQuantidadeAmostra($this->quantidade_amostra);

		$copyObj->setViabilidadeOperacional($this->viabilidade_operacional);

		$copyObj->setTecnicoHabilitado($this->tecnico_habilitado);

		$copyObj->setManoObra($this->mano_obra);

		$copyObj->setPlazoExequivel($this->plazo_exequivel);

		$copyObj->setViabilidadeFinanciera($this->viabilidade_financiera);

		$copyObj->setValorAdecuado($this->valor_adecuado);

		$copyObj->setPlazoPagamento($this->plazo_pagamento);

		$copyObj->setTercerizado($this->tercerizado);

		$copyObj->setIdFornecedor($this->id_fornecedor);

		$copyObj->setValorProposta($this->valor_proposta);

		$copyObj->setAprobacionCliente($this->aprobacion_cliente);

		$copyObj->setResponsableComercial($this->responsable_comercial);

		$copyObj->setAprobadoResponsableComercial($this->aprobado_responsable_comercial);

		$copyObj->setResponsableTecnico($this->responsable_tecnico);

		$copyObj->setAprobadoResponsableTecnico($this->aprobado_responsable_tecnico);

		$copyObj->setAprobacionProposta($this->aprobacion_proposta);

		$copyObj->setCodigoPropostaFinal($this->codigo_proposta_final);

		$copyObj->setValidadeProposta($this->validade_proposta);

		$copyObj->setFormaAprobacion($this->forma_aprobacion);

		$copyObj->setPrecio($this->precio);

		$copyObj->setFormaPagamento($this->forma_pagamento);

                $copyObj->setNome($this->nome);

		$copyObj->setNew(true);

		$copyObj->setId(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     Analisis Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     AnalisisPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new AnalisisPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}

	// symfony_behaviors behavior
	
	/**
	 * Calls methods defined via {@link sfMixer}.
	 */
	public function __call($method, $arguments)
	{
	  if (!$callable = sfMixer::getCallable('BaseAnalisis:'.$method))
	  {
	    throw new sfException(sprintf('Call to undefined method BaseAnalisis::%s', $method));
	  }
	
	  array_unshift($arguments, $this);
	
	  return call_user_func_array($callable, $arguments);
	}

} // BaseAnalisis
