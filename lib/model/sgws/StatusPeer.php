<?php


/**
 * Skeleton subclass for performing query and update operations on the 'status' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 23/09/2013 18:11:00
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.sgws
 */
class StatusPeer extends BaseStatusPeer {

    public static function getListStatus($tipo = null)
    {
        $c = new Criteria();
        //Eliminamos la columnas de seleccion en caso de que esten definidas
        $c->clearSelectColumns();
        //Se Agregan las Columnas necesarias
        $c->addSelectColumn(self::STATUS);
        $c->addSelectColumn(self::IDSTATUS);
        if(!$tipo || $tipo == 1)
        {
            $c->add(self::STATUS, 3, Criteria::LESS_EQUAL);
        }
        if($tipo == 2)
        {
            $c->add(self::STATUS, 3, Criteria::GREATER_THAN);
        }
        
        //Ejecucion de consulta
        $rs = self::doSelectStmt($c);
        //Se recuperan los registros y se genera arreglo
        //$sections[0] = '';
        while($res = $rs->fetch())
        {
            $sections[$res['STATUS']] = $res['IDSTATUS'];            
        }
        if(!empty($sections)){
            return $sections;
        }else{
            return false;
        }
    }
    
    public static function getListStatusFilter()
    {
        $c = new Criteria();
        //Eliminamos la columnas de seleccion en caso de que esten definidas
        $c->clearSelectColumns();
        //Se Agregan las Columnas necesarias
        $c->addSelectColumn(self::STATUS);
        $c->addSelectColumn(self::IDSTATUS);
        $c->add(self::STATUS, 3, Criteria::GREATER_THAN);
        
        //Ejecucion de consulta
        $rs = self::doSelectStmt($c);
        //Se recuperan los registros y se genera arreglo
        $sections[''] = 'Tudos';
        while($res = $rs->fetch())
        {
            $sections[$res['STATUS']] = $res['IDSTATUS'];            
        }
        if(!empty($sections)){
            return $sections;
        }else{
            return false;
        }
    }
    
    public static function getListStatus2($tipo = null)
    {
        $c = new Criteria();
        //Eliminamos la columnas de seleccion en caso de que esten definidas
        $c->clearSelectColumns();
        //Se Agregan las Columnas necesarias
        $c->addSelectColumn(self::STATUS);
        $c->addSelectColumn(self::IDSTATUS);
        if(!$tipo || $tipo == 1)
        {
            $c->add(self::STATUS, 3, Criteria::LESS_EQUAL);
        }
        if($tipo == 2)
        {
            $c->add(self::STATUS, 3, Criteria::GREATER_THAN);
        }
        
        //Ejecucion de consulta
        $rs = self::doSelectStmt($c);
        //Se recuperan los registros y se genera arreglo
        while($res = $rs->fetch())
        {
            $sections['id'] = $res['STATUS'];            
            $sections['nome'] = $res['IDSTATUS'];            
            $datos[] = $sections;
        }
        if(!empty($datos)){
            return $datos;
        }else{
            return false;
        }
    }

} // StatusPeer
