<?php


/**
 * This class defines the structure of the 'funcionario' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 03/04/2014 12:04:42
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.sgws.map
 */
class FuncionarioTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.sgws.map.FuncionarioTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('funcionario');
		$this->setPhpName('Funcionario');
		$this->setClassname('Funcionario');
		$this->setPackage('lib.model.sgws');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('CODIGOFUNCIONARIO', 'Codigofuncionario', 'INTEGER', true, 11, null);
		$this->addColumn('NOMEFUNCIONARIO', 'Nomefuncionario', 'VARCHAR', false, 50, null);
		$this->addColumn('DATANASCIMENTO', 'Datanascimento', 'DATE', false, null, null);
		$this->addColumn('SEXO', 'Sexo', 'VARCHAR', false, 50, null);
		$this->addColumn('CELULAR', 'Celular', 'VARCHAR', false, 50, null);
		$this->addColumn('TELEFONE', 'Telefone', 'VARCHAR', false, 50, null);
		$this->addColumn('EMAIL', 'Email', 'VARCHAR', false, 50, null);
		$this->addColumn('ENDERECO', 'Endereco', 'VARCHAR', false, 50, null);
		$this->addColumn('NUMERO', 'Numero', 'VARCHAR', false, 50, null);
		$this->addColumn('COMPLEMENTO', 'Complemento', 'VARCHAR', false, 50, null);
		$this->addColumn('BAIRRO', 'Bairro', 'VARCHAR', false, 50, null);
		$this->addColumn('CIDADE', 'Cidade', 'VARCHAR', false, 50, null);
		$this->addColumn('ESTADO', 'Estado', 'VARCHAR', false, 50, null);
		$this->addColumn('PAIS', 'Pais', 'VARCHAR', false, 50, null);
		$this->addColumn('CEP', 'Cep', 'VARCHAR', false, 50, null);
		$this->addColumn('NUMERODEPENDENTES', 'Numerodependentes', 'VARCHAR', false, 50, null);
		$this->addColumn('CODIGOFERIAS', 'Codigoferias', 'VARCHAR', false, 50, null);
		$this->addColumn('REGISTRO', 'Registro', 'VARCHAR', false, 50, null);
		$this->addColumn('RG', 'Rg', 'VARCHAR', false, 50, null);
		$this->addColumn('CPF', 'Cpf', 'VARCHAR', false, 50, null);
		$this->addColumn('CARGO', 'Cargo', 'VARCHAR', false, 50, null);
		$this->addColumn('NOMEUSUARIO', 'Nomeusuario', 'VARCHAR', false, 50, null);
		$this->addColumn('SENHA', 'Senha', 'VARCHAR', false, 50, null);
		$this->addColumn('NIVEL', 'Nivel', 'SMALLINT', false, 6, null);
		$this->addColumn('FORMACONTRATACAO', 'Formacontratacao', 'VARCHAR', false, 50, null);
		$this->addColumn('DATAADMISSAO', 'Dataadmissao', 'DATE', false, null, null);
		$this->addColumn('DATADEMISSAO', 'Datademissao', 'DATE', false, null, null);
		$this->addColumn('SALARIO', 'Salario', 'INTEGER', false, 11, null);
		$this->addColumn('FOLHA', 'Folha', 'VARCHAR', false, 1, null);
		$this->addColumn('DOCUMENTO', 'Documento', 'VARCHAR', false, 50, null);
		$this->addColumn('STATUS', 'Status', 'VARCHAR', false, 50, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // FuncionarioTableMap
