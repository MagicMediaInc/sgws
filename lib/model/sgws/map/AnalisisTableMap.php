<?php


/**
 * This class defines the structure of the 'analisis' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 03/04/2014 12:04:41
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.sgws.map
 */
class AnalisisTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.sgws.map.AnalisisTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('analisis');
		$this->setPhpName('Analisis');
		$this->setClassname('Analisis');
		$this->setPackage('lib.model.sgws');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
		$this->addColumn('ANALISIS_PPAL', 'AnalisisPpal', 'CHAR', true, null, '0');
		$this->addColumn('ID_PROPOSTA_ANEXO', 'IdPropostaAnexo', 'INTEGER', true, 11, 0);
		$this->addColumn('ID_PROPOSTA', 'IdProposta', 'INTEGER', true, 11, null);
		$this->addColumn('ID_RESPONSAVEL', 'IdResponsavel', 'INTEGER', true, 11, null);
		$this->addColumn('ID_CLIENTE', 'IdCliente', 'INTEGER', true, 11, null);
		$this->addColumn('STATUS', 'Status', 'CHAR', true, null, null);
		$this->addColumn('DATA_CREACION', 'DataCreacion', 'DATE', true, null, null);
		$this->addColumn('DATA_APROBACION', 'DataAprobacion', 'DATE', true, null, null);
		$this->addColumn('DESCRICAO', 'Descricao', 'LONGVARCHAR', true, null, null);
		$this->addColumn('PLAZO', 'Plazo', 'INTEGER', true, 11, null);
		$this->addColumn('VIABILIDADE_TECNICA', 'ViabilidadeTecnica', 'CHAR', true, null, null);
		$this->addColumn('EQUIPAMENTO_APROPIADO', 'EquipamentoApropiado', 'CHAR', true, null, null);
		$this->addColumn('METODOLOGIA_VALIDADA', 'MetodologiaValidada', 'CHAR', true, null, null);
		$this->addColumn('QUANTIDADE_AMOSTRA', 'QuantidadeAmostra', 'CHAR', true, null, null);
		$this->addColumn('VIABILIDADE_OPERACIONAL', 'ViabilidadeOperacional', 'CHAR', true, null, null);
		$this->addColumn('TECNICO_HABILITADO', 'TecnicoHabilitado', 'CHAR', true, null, null);
		$this->addColumn('MANO_OBRA', 'ManoObra', 'CHAR', true, null, null);
		$this->addColumn('PLAZO_EXEQUIVEL', 'PlazoExequivel', 'CHAR', true, null, null);
		$this->addColumn('VIABILIDADE_FINANCIERA', 'ViabilidadeFinanciera', 'CHAR', true, null, null);
		$this->addColumn('VALOR_ADECUADO', 'ValorAdecuado', 'CHAR', true, null, null);
		$this->addColumn('PLAZO_PAGAMENTO', 'PlazoPagamento', 'CHAR', true, null, null);
		$this->addColumn('TERCERIZADO', 'Tercerizado', 'CHAR', true, null, null);
		$this->addColumn('ID_FORNECEDOR', 'IdFornecedor', 'INTEGER', true, 11, null);
		$this->addColumn('VALOR_PROPOSTA', 'ValorProposta', 'INTEGER', true, 11, null);
		$this->addColumn('APROBACION_CLIENTE', 'AprobacionCliente', 'CHAR', true, null, null);
		$this->addColumn('RESPONSABLE_COMERCIAL', 'ResponsableComercial', 'INTEGER', true, 11, null);
		$this->addColumn('APROBADO_RESPONSABLE_COMERCIAL', 'AprobadoResponsableComercial', 'CHAR', true, null, null);
		$this->addColumn('RESPONSABLE_TECNICO', 'ResponsableTecnico', 'INTEGER', true, 11, null);
		$this->addColumn('APROBADO_RESPONSABLE_TECNICO', 'AprobadoResponsableTecnico', 'CHAR', true, null, null);
		$this->addColumn('APROBACION_PROPOSTA', 'AprobacionProposta', 'CHAR', true, null, null);
		$this->addColumn('CODIGO_PROPOSTA_FINAL', 'CodigoPropostaFinal', 'INTEGER', true, 11, null);
		$this->addColumn('VALIDADE_PROPOSTA', 'ValidadeProposta', 'VARCHAR', true, 20, null);
		$this->addColumn('FORMA_APROBACION', 'FormaAprobacion', 'VARCHAR', true, 20, null);
		$this->addColumn('PRECIO', 'Precio', 'DECIMAL', true, 10, null);
		$this->addColumn('FORMA_PAGAMENTO', 'FormaPagamento', 'VARCHAR', true, 15, null);
                $this->addColumn('NOME', 'Nome', 'VARCHAR', true, 255, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // AnalisisTableMap
