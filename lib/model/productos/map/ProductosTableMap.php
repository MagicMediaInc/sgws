<?php


/**
 * This class defines the structure of the 'productos' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 03/04/2014 12:04:40
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.productos.map
 */
class ProductosTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.productos.map.ProductosTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('productos');
		$this->setPhpName('Productos');
		$this->setClassname('Productos');
		$this->setPackage('lib.model.productos');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
		$this->addColumn('CODIGO', 'Codigo', 'VARCHAR', false, 5, '');
		$this->addColumn('DESTAQUE', 'Destaque', 'CHAR', false, 1, 'S');
		$this->addColumn('NOME', 'Nome', 'VARCHAR', false, 60, '');
		$this->addColumn('ANO', 'Ano', 'VARCHAR', false, 4, '');
		$this->addColumn('ID_CATEGORIA', 'IdCategoria', 'INTEGER', false, 11, 0);
		$this->addColumn('ESCALA', 'Escala', 'VARCHAR', false, 10, '1:00');
		$this->addColumn('PESO', 'Peso', 'FLOAT', false, 9, 0);
		$this->addColumn('OBSERVACOES', 'Observacoes', 'LONGVARCHAR', false, null, null);
		$this->addColumn('COMPRIMENTO', 'Comprimento', 'VARCHAR', false, 50, '0.0');
		$this->addColumn('LARGURA', 'Largura', 'FLOAT', false, 9, 0);
		$this->addColumn('ALTURA', 'Altura', 'FLOAT', false, 9, 0);
		$this->addColumn('COR', 'Cor', 'VARCHAR', true, 20, '');
		$this->addColumn('PRECO', 'Preco', 'DECIMAL', false, 10, 0);
		$this->addColumn('DESCONTO', 'Desconto', 'TINYINT', false, 4, 5);
		$this->addColumn('DESCONTO_BOLETO', 'DescontoBoleto', 'TINYINT', false, 4, 10);
		$this->addColumn('MAX_PARCELAS', 'MaxParcelas', 'TINYINT', false, 4, 10);
		$this->addColumn('ESTOQUE', 'Estoque', 'INTEGER', false, 11, 100);
                $this->addColumn('LOJA', 'Loja', 'INTEGER', false, 11, 100);
		$this->addColumn('MIN_ESTOQUE', 'MinEstoque', 'INTEGER', false, 11, 10);
		$this->addColumn('CREDITO', 'Credito', 'VARCHAR', false, 200, 'http://www.motormint.com (acesso 21/09/2009)');
		$this->addColumn('DATA_CAD', 'DataCad', 'DATE', false, null, null);
		$this->addColumn('FOTO', 'Foto', 'VARCHAR', false, 50, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // ProductosTableMap
